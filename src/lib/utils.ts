import { v4 as uuid } from 'uuid'

const pluralRule = new Intl.PluralRules('en-US', {
  type: 'ordinal',
})

const suffixes = new Map([
  ['one', 'st'],
  ['two', 'nd'],
  ['few', 'rd'],
  ['other', 'th'],
])

function formatOrdinals(number: number) {
  const rule = pluralRule.select(number)
  const suffix = suffixes.get(rule) as Suffix
  return `${number}${suffix}`
}

type Suffix = 'th' | 'rd' | 'nd' | 'st'

type Key = `${number}${Suffix}`

export function generateUniqueIds(total: number) {
  const uniqueIds = {} as Record<Key, string>

  const autoGeneratedArrayWithNumbers = [...Array(total).keys()].map(
    (number) => number + 1
  )

  autoGeneratedArrayWithNumbers.forEach((number) => {
    uniqueIds[formatOrdinals(number) as Key] = uuid()
  })

  return uniqueIds
}
